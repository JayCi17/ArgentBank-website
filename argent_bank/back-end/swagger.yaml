swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
        
  /user/transactions:
    get:
      description: Retrieve all transactions for the current month
      security : 
        -Bearer: []
      responses : 
        '200':
          description: Succes, return list of transactions
        '401':
          description: Unauthorized, invalid or missing token
        '500':
          description: Server error
    post:
      description: add a new transaction
      security:
        -Bearer: []
      parameters:
        -name: transactionID
          in: path
        -name: newTransaction
          in: body
          required: true
        produces:
          -application/json
      responses:
      '200':
        description: Success, transaction has been added
      '400': 
        description: Error, invalid fields
      '401':
        description: Unauthorized, missing or invalid token
      '500':
        description: Error server

    /user/transactions{transactionID}:
      get:
        description: Retrieve a specific transaction
        security:
          Bearer: []
        parameters:
          -name: transactionID
          in : path
          descritpion: ID of the transaction retrieve
          required: true
          type: string
        responses:
          '200':
            descritpion: Success, return the specified transaction
          '401':
            description: Unauthorized, missing ou invalid token
          '404':
            description: Transaction not found
          '500':
            description: Server error
      put:
        description: Update informations of a specific transactions
        security:
          Bearer : []
        parameters:
          -name: transactionID
            in : path
            description: ID of the transaction to update
            required: true
            type: string
          -name: transaction
            in: body
            description: Object representing the new transaction informations
            required: true
            schema:
              $ref: '#/definitions/transaction'
        responses:
          '200':
            description: Succes, the transaction has been updated
          '400':
            description: Bad request, please check the provided data
          '401':
            description: Invalid or missing token
          '404':
            description: Transaction not found
          '500':
            description: Server Error
      delete:
        description: delete informations of a specific transaction
        security: 
          Bearer: []
        parameters:
          -name: transactionID
            in: path
            description: ID of the transaction to delete
            required: true
            type: string
        responses:
          '200':
            description: Success, transaction information has been deleted
          '401':
            description: Unauthorized, missong or invalid token
          '404':
            description: Transaction not found
          '500':
          description: Server error


    